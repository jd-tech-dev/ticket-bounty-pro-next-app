name: Next.js Build

on:
  push:
    branches: [ main ]
jobs:
  build:
    runs-on: ubuntu-latest
    permissions: 
      contents: read
      actions: read
    steps:
      - uses: actions/checkout@v4
      
      - name: Create .env file with placeholder values
        run: |
          touch .env
          echo "DATABASE_URL=postgresql://placeholder" >> .env
          echo "DIRECT_URL=postgresql://placeholder" >> .env
          echo "RESEND_API_KEY=placeholder-key" >> .env
          echo "AWS_BUCKET_NAME=placeholder-name" >> .env
          echo "AWS_REGION=placeholder-region" >> .env
          echo "AWS_ACCESS_KEY=placeholder-key" >> .env
          echo "AWS_SECRET_ACCESS_KEY=placeholder-secret-key" >> .env
          echo "NEXT_PUBLIC_STRIPE_PUBLISHABLE_KEY=placeholder-key" >> .env
          echo "STRIPE_SECRET_KEY=placeholder-secret-key" >> .env
          echo "STRIPE_WEBHOOK_SECRET=placeholder-secret-key" >> .env
          
      - name: Cache dependencies
        id: cache-deps
        uses: actions/cache@v4
        with:
          path: node_modules
          key: deps-node-modules-${{ hashFiles('**/package-lock.json') }}
          
      - name: Install dependencies
        if: steps.cache-deps.outputs.cache-hit != 'true'
        run: npm ci

      - name: Cache prisma
        id: cache-prisma
        uses: actions/cache@v4
        with:
          path: ./src/generated/prisma
          key: prisma-schema-${{ hashFiles('prisma/schema.prisma') }}  

      - name: Generate prisma
        if: steps.cache-deps.outputs.cache-hit != 'true' || steps.cache-prisma.outputs.cache-hit != 'true'
        run: npm run postinstall
            
      - name: Build Next.js app
        run: npm run build
